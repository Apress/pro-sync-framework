//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyncPeers.RemoteProviderProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteProviderProxy.IRemotePeerSyncContract", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IRemotePeerSyncContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePeerSyncContract/BeginSession", ReplyAction="http://tempuri.org/IRemotePeerSyncContract/BeginSessionResponse")]
        void BeginSession();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IRemotePeerSyncContract/GetKnowledge", ReplyAction="http://tempuri.org/IRemotePeerSyncContract/GetKnowledgeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="batchSize")]
        uint GetKnowledge(out Microsoft.Synchronization.SyncKnowledge knowledge);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IRemotePeerSyncContract/GetChanges", ReplyAction="http://tempuri.org/IRemotePeerSyncContract/GetChangesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.SyncIdFormatGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.ForgottenKnowledge))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.SyncKnowledge))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.ChangeBatch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.ConflictResolutionPolicy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.SyncSessionStatistics))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncScopeProgress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncTableProgress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncTableProgress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncConflict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncConflict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncStage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbConflictType))]
        Microsoft.Synchronization.ChangeBatch GetChanges(out object changeData, uint batchSize, Microsoft.Synchronization.SyncKnowledge destinationKnowledge);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IRemotePeerSyncContract/ApplyChanges", ReplyAction="http://tempuri.org/IRemotePeerSyncContract/ApplyChangesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.SyncIdFormatGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.ForgottenKnowledge))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.SyncKnowledge))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.ChangeBatch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.ConflictResolutionPolicy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.SyncSessionStatistics))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncContext))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncScopeProgress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncTableProgress[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncTableProgress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncConflict[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncConflict))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbSyncStage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Microsoft.Synchronization.Data.DbConflictType))]
        void ApplyChanges(Microsoft.Synchronization.ConflictResolutionPolicy resolutionPolicy, Microsoft.Synchronization.ChangeBatch sourceChanges, object changeData, ref Microsoft.Synchronization.SyncSessionStatistics sessionStatistics);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IRemotePeerSyncContract/EndSession", ReplyAction="http://tempuri.org/IRemotePeerSyncContract/EndSessionResponse")]
        void EndSession();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IRemotePeerSyncContractChannel : SyncPeers.RemoteProviderProxy.IRemotePeerSyncContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RemotePeerSyncContractClient : System.ServiceModel.ClientBase<SyncPeers.RemoteProviderProxy.IRemotePeerSyncContract>, SyncPeers.RemoteProviderProxy.IRemotePeerSyncContract {
        
        public RemotePeerSyncContractClient() {
        }
        
        public RemotePeerSyncContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemotePeerSyncContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemotePeerSyncContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemotePeerSyncContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void BeginSession() {
            base.Channel.BeginSession();
        }
        
        public uint GetKnowledge(out Microsoft.Synchronization.SyncKnowledge knowledge) {
            return base.Channel.GetKnowledge(out knowledge);
        }
        
        public Microsoft.Synchronization.ChangeBatch GetChanges(out object changeData, uint batchSize, Microsoft.Synchronization.SyncKnowledge destinationKnowledge) {
            return base.Channel.GetChanges(out changeData, batchSize, destinationKnowledge);
        }
        
        public void ApplyChanges(Microsoft.Synchronization.ConflictResolutionPolicy resolutionPolicy, Microsoft.Synchronization.ChangeBatch sourceChanges, object changeData, ref Microsoft.Synchronization.SyncSessionStatistics sessionStatistics) {
            base.Channel.ApplyChanges(resolutionPolicy, sourceChanges, changeData, ref sessionStatistics);
        }
        
        public void EndSession() {
            base.Channel.EndSession();
        }
    }
}
